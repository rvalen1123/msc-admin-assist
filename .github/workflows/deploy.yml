name: Deploy

on:
  push:
    branches: [ main, release/* ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd server
        npm ci

    - name: Build application
      run: |
        cd server
        npm run build

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push container image to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/msc-wound-care:${{ github.sha }} ./server
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/msc-wound-care:${{ github.sha }}

    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
        containerAppName: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
        imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/msc-wound-care:${{ github.sha }}
        containerAppEnvironment: ${{ secrets.AZURE_CONTAINER_APP_ENV }}

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() 